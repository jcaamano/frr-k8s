// SPDX-License-Identifier:Apache-2.0

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/metallb/frr-k8s/api/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FRRConfigurationLister helps list FRRConfigurations.
// All objects returned here must be treated as read-only.
type FRRConfigurationLister interface {
	// List lists all FRRConfigurations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.FRRConfiguration, err error)
	// FRRConfigurations returns an object that can list and get FRRConfigurations.
	FRRConfigurations(namespace string) FRRConfigurationNamespaceLister
	FRRConfigurationListerExpansion
}

// fRRConfigurationLister implements the FRRConfigurationLister interface.
type fRRConfigurationLister struct {
	indexer cache.Indexer
}

// NewFRRConfigurationLister returns a new FRRConfigurationLister.
func NewFRRConfigurationLister(indexer cache.Indexer) FRRConfigurationLister {
	return &fRRConfigurationLister{indexer: indexer}
}

// List lists all FRRConfigurations in the indexer.
func (s *fRRConfigurationLister) List(selector labels.Selector) (ret []*v1beta1.FRRConfiguration, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.FRRConfiguration))
	})
	return ret, err
}

// FRRConfigurations returns an object that can list and get FRRConfigurations.
func (s *fRRConfigurationLister) FRRConfigurations(namespace string) FRRConfigurationNamespaceLister {
	return fRRConfigurationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FRRConfigurationNamespaceLister helps list and get FRRConfigurations.
// All objects returned here must be treated as read-only.
type FRRConfigurationNamespaceLister interface {
	// List lists all FRRConfigurations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.FRRConfiguration, err error)
	// Get retrieves the FRRConfiguration from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.FRRConfiguration, error)
	FRRConfigurationNamespaceListerExpansion
}

// fRRConfigurationNamespaceLister implements the FRRConfigurationNamespaceLister
// interface.
type fRRConfigurationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FRRConfigurations in the indexer for a given namespace.
func (s fRRConfigurationNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.FRRConfiguration, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.FRRConfiguration))
	})
	return ret, err
}

// Get retrieves the FRRConfiguration from the indexer for a given namespace and name.
func (s fRRConfigurationNamespaceLister) Get(name string) (*v1beta1.FRRConfiguration, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("frrconfiguration"), name)
	}
	return obj.(*v1beta1.FRRConfiguration), nil
}
